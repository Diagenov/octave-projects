clc;

% коэфф-ты при Y(X(i)) для трехточечной разностной схемы (i-1, i, i+1)
w = [
  0,  1,  0; % 0-производная
  0, -1,  1; % 1-производная (-1, 1, 0)
  1, -2,  1; % 2-производная
];

start = 0;  % стартовая точка
L = 20;     % ширина
a = L/1500; % шаг

X = start:a:(L-start); % одномерная сетка
M = length(X);         % кол-во узлов

% уравнение Бесселя: x^2*y'' + x*y' + (x^2 - v^2)*y = 0, где v - целое число

% чтобы сократить время на расчеты
xa = X / a;
xx = X.^2;
xxaa = xx / a^2;

numeric = zeros(M, 0);  % для хранения численных решений
analitic = zeros(M, 0); % для хранения аналитических решений

x_max = ceil(X(end));
x_min = ceil(X(1));
y_max = 0;
y_min = 0;

% диапазон целых чисел
v_start = 0;
v_end = 5;

for v=v_start:v_end % проходимся по всему диапазону

  analitic(:, end+1) = besselj(v, X); % аналитическое решение - функция Бесселя

  b = zeros(M, 1); % нули в правой части уравнения

  % граничные условия (для тренировки!..), можно выбрать любые (но тогда ответ не сходится с аналитикой)
  b(1) = analitic(1, end);
  b(end) = analitic(end, end);

  % замечание: если занулить граничные условия, представленный здесь алгоритм решения не сработает

  xxvv = xx - v^2; % чтобы сократить время на расчеты

  a_d3 = (xxaa * w(3, 1)) + (xa * w(2, 1)) + (xxvv * w(1, 1)); % коэфф-т при Y(X(i-1))
  a_d2 = (xxaa * w(3, 2)) + (xa * w(2, 2)) + (xxvv * w(1, 2)); % коэфф-т при Y(X(i))
  a_d1 = (xxaa * w(3, 3)) + (xa * w(2, 3)) + (xxvv * w(1, 3)); % коэфф-т при Y(X(i+1))

  A_D1 = a_d1(1:end-1); % побочная диагональ для Y(X(i+1)), не включает Y(X(end))
  A_D2 = a_d2(1:end);   % главная диагональ для Y(X(i))
  A_D3 = a_d3(2:end);   % побочная диагональ для Y(X(i-1)), не включает Y(X(1))

  % первое граничное условие
  A_D1(1) = 0;
  A_D2(1) = 1;
  % второе граничное условие
  A_D2(end) = 1;
  A_D3(end) = 0;

  A = diag(A_D1, +1) + diag(A_D2) + diag(A_D3, -1); % сборка матрицы (оператор над Y)

  numeric(:, end+1) = inv(A) * b; % решение через обратную матрицу (предлагают QR-алгоритм, если обратная матрица не собирается)

  % замечание: если использовать pinv (псевдообратная матрица), то дает те же результаты для X > 0 и какие-то результаты для X <= 0, но за большее время

  y_max = max([y_max, max(analitic(:, end)), max(numeric(:, end))]); % для рисования графиков
  y_min = min([y_min, min(analitic(:, end)), min(numeric(:, end))]); % для рисования графиков

endfor

clf;
hold on;
grid on;
set(gca, 'fontsize', 14);
title(sprintf('Сравнение численного и аналитического решений уравнения Бесселя для \\nu от %d до %d', v_start, v_end), 'fontsize', 16)
axis([x_min, x_max, y_min, y_max]);

plot(X, numeric, 'r', "linewidth", 1.75, X, analitic, 'k--', "linewidth", 1.75); % сравнение результатов

plot([x_min, x_max], [0, 0], 'k', "linewidth", 0.5);
plot([x_min, x_max], [y_max, y_max], 'k', "linewidth", 0.5);
plot([x_max, x_max], [y_min, y_max], 'k', "linewidth", 0.5);
hold off;






